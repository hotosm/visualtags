<%
def group_child_to_json(child)
  if child.name == "item" || child.name == "group"
  json = {"name" => child["name"], "type" => child.name, "icon" => child["icon"], "geo_type" => child["type"] }
  json["item"] = get_item(child) if child.name == "item"
  end
  if child.name == "group" && child.children?
    json["children"] = []
    child.children.each do | c |
      if c.name == "item" || c.name == "group"
        json["children"] << group_child_to_json(c)
      end
    end
  end
  json
end

def child_to_json(child)
  if child.name == "item" || child.name == "group"
    json = {"name" => child["name"], "type" => child.name, "icon" => child["icon"], "geo_type" => child["type"] }
    json["item"] = get_item(child) if child.name == "item"
  end
  if child.name == "group" && child.children?
    json["children"] = []
    child.children.each do | c |
      if c.name == "item" || c.name == "group"
        json["children"] << group_child_to_json(c)
      end
    end
  end

  json
end

#parses an item and extracts the children from it
def get_item(child)
  items = []
  child.each_element do | ce |
    item = {}
    item = {"name"=> ce.name, "key"=> ce["key"] || "", "text" => ce["text"] || "", 
              "value"=>ce["value"]||"", "values" => ce["values"] || "", "default"=> ce["default"]|| "", "link"=> ce["href"] || ""}
    if ce.name == "optional"
      optional_items = []
      ce.each_element do | opt |
        optional_items << {"name"=> opt.name, "key"=> opt["key"] || "", "text" => opt["text"] || "",
              "value"=>opt["value"]||"", "values" => opt["values"] || "", "default"=> opt["default"]|| "", "link" => opt["href"] || ""}
      end
      item["items"] = optional_items 
    end
    items << item 
  end

  items
end

if @collection.custom_preset
  tree_data = @collection.custom_preset
else
  xml_array = @collection.to_preset_array
  json_array = []
  xml_array.each do | child |
    #p child
    json_array << child_to_json(child)
  end
  json_array.join(",")
  tree_data = json_array.to_json
end

-%>
<script type="text/javascript">
  var data = <%= tree_data %>;

  $(function() {
    $('#tag_tree').tree({
      data: data,
      autoOpen: 0,
      dragAndDrop: <%= editable %>,
      selectable: true,
      useContextMenu: false,
      onCreateLi: function(node, $li) {
        // Add 'icon' span before title
        var icon="";
        if (node.icon){
         icon = "<img src='/icons/"+node.icon+"' width='32px' height='32px'  />";
        }else{
          icon = "<img src='/icons/styles/standard/empty.png' width='32px' height='32px' />";
        }
        $li.find('.jqtree-title').before('<span class="icon">'+icon+'</span>');

      },
      onCanMoveTo: function(moved_node, target_node, position) {
        if (position == "inside" && target_node.type =="item") {
          return false;
        } else {
          return true;
        }
      }


    }); //tree


  $('#tag_tree').bind(
    'tree.select',
    function(event) {
        if (event.node) {
            // node was selected
            var node = event.node;
            if (node.type != "item"){
              $("#tag_info").empty()
              return false;
            }
            //console.log(node)
            var item_elements =  node["item"]
            $("#tag_info").empty()
            $("#tag_info").append("<table id='item_table'>")
            $("#item_table").append("<tr id='ele_r'><th colspan=2 class='tag_header'>"+node['name']+"  ("+node['geo_type'] +")</th></tr>")
            var linky = null;
            $.each(item_elements, function(index, ele){
              if (ele.name == "link"){
                linky = ele
                }
              if (ele.name == "optional"){
                $("#item_table").append("Optional Attributes: <br />")
                $.each(ele.items, function(i, opt_ele){
                  $("#item_table").append(render_ele(opt_ele));
                });
              }else{
                $("#item_table").append(render_ele(ele));
              }
            });
           //ADD Item link at end
           if (linky){
            $("#item_table").append("<a href='"+linky.link+"'>More information link</a><br />")
            }
           $("#tag_info").append("</table>")
            
        }
        else {
            // event.node is null
            // a node was deselected
        }
    }//function(event)
);  //select tree


function render_ele(ele){
  html = "<tr class='ele "+ ele.name + "' >"
  ele_html = ""
  if (ele.name == "label") {
    ele_html = "<td>"+ele.text+"</td>"
  }
  if (ele.name == "space"){
    ele_html = "<td>--</td>"
  } 
  if (ele.name == "key"){
    ele_html = "<td>"+ele.key + "</td><td>"+ele.value+"</td>"
  }
  if (ele.name == "text"){
    ele_html = "<td>"+ele.text+"</td><td><input type='text' /></td>" //|| ele.key
  }
  
  //TODO display_values
  //TODO list_entries
  if (ele.name == "combo"){
    ele_html = "<td>"+ele.text+"</td>" //|| ele.key
    ele_html += "<td><select>"
    $.each(ele.values.split(","), function(index, option){
        ele_html +=  "<option value='"+ option +"'>"+ option +"</option>"
    });
    ele_html += "</select></td>"
  }
  if (ele.name == "check"){
    ele_html = "<td><input type='checkbox' "
    if (ele.default == "on"){
      ele_html += "checked"
    }
    ele_html += " >" + ele.text +"</td>"  //|| ele.key
  }
  
  //TODO multiselect
  //TODO role?
  
  html += ele_html + "</tr>"
  console.log(html)
  return html
}


  }); //jq function

</script>
 
