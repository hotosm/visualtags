<%
if @collection.custom_preset && !@collection.custom_preset.empty?
  tree_data = @collection.custom_preset
else
  tree_data = "[]"
end
-%>
<script type="text/javascript">
  var data = <%= tree_data %>;

  $(function() {

    $("#add_item_dialog").dialog({
      autoOpen: false,
      width: 400,
      buttons: [
        { text: "Delete",
          "class": "delete_button",
          click: function(){
            var itemid = $('form#add_item_form input#item_id').val();
            var item_node = $('#tag_tree').tree('getNodeById', itemid);
            $('#tag_tree').tree('removeNode', item_node);
            $(this).dialog("close");
          }

         },
        {
          text: "Ok",
          click: function() {
            var item_type = $('form#add_item_form select#item_type').val()
            var name = $('form#add_item_form input#name').val()
            var icon = "presets/"+$('form#add_item_form select#icon_select').val()
            var geo_type = $('form#add_item_form select#geo_type').val()
            if (geo_type){
              geo_type = geo_type.join(",")
            }
            var uuid = Math.random().toString(36).substring(7);
            var new_item = { "name": name, "type": item_type, "icon": icon, "geo_type": geo_type, "id" :uuid }
            if(item_type == "item"){
              if  (geo_type == null || geo_type == ""){
                alert("An Item needs at least one type specified");
                return false;
              }
            }

            //update or add to tree
            var itemid = $('form#add_item_form input#item_id').val();
            if (itemid && itemid != ""){
              //update the node
              delete new_item["id"]
              var item_node = $('#tag_tree').tree('getNodeById', itemid);
              $('#tag_tree').tree('updateNode', item_node, new_item)
            } else{
              //add the new node
              new_item["item"] = []
              $('#tag_tree').tree('prependNode', new_item);
            }
            
            $( this ).dialog( "close" );
          }
        },
        {
          text: "Cancel",
          click: function() {
            $( this ).dialog( "close" );
          }
        }
      ],
      open: function(event, ui){
        var itemid = $('form#add_item_form input#item_id').val();
        if (itemid && itemid != ""){
          $("div.ui-dialog button.delete_button").attr("disabled", false)
        } else{
          $("div.ui-dialog button.delete_button").attr("disabled", true)
        }
      },
      close: function( event, ui ) {
        document.getElementById("add_item_form").reset();
        $('form#add_item_form input#item_id').val('')
        $('form#add_item_form select#icon_select').select2("val", "empty.png")
        $("#add_item_dialog").dialog("option", "title", "Add New Item");
      }
    });

    $("#add_preset_element_dialog").dialog({
      autoOpen: false,
      width: 400,
      buttons: [
        {
          text: "Ok",
          click: function() {
            //get value from form back
            var ele_type = $('form#add_preset_element_form select#type_choice').val()
            var form_name = "form#eleform_"+ele_type;
            var key = $(form_name + " input[name='key']").val();
            var text = $(form_name + " input[name='text']").val(); 
            var value = $(form_name + " input[name='value']").val();
            var link = $(form_name + " input[name='link']").val();
            var default_value = null;
            if ($(form_name + " input[name='default_value']").prop('checked')){
              default_value = $(form_name + " input[name='default_value']").val();
            }
            var options = $(form_name + " select[name='select'] option");
            var values = $.map(options ,function(option) {
              return option.value;
             });
            
            if (ele_type == "multiselect"){
              values = values.join(";")
            } else{
              values = values.join(",")
            }

            if (ele_type != "space" && ele_type != "optional" && ele_type != "label" && ele_type != "link"){
              if  (typeof key === "undefined" || key == ""){
                alert("key is required");
                return false;
              }
            }

            var new_preset_ele = {
              "name":ele_type,
              "key": key,
              "text": text,
              "value": value,
              "default_value": default_value,
              "values": values,
              "link": link
            };
            for(var k in new_preset_ele) {
              if(!new_preset_ele[k]) delete new_preset_ele[k];
            }

            $('#item_tree').tree('prependNode', new_preset_ele);
            $( this ).dialog( "close" );
          }
        },
        {
          text: "Cancel",
          click: function() {
            $( this ).dialog( "close" );
          }
        }
      ]
    });

    $('#tag_tree').tree({
      data: data,
      autoOpen: 0,
      dragAndDrop: <%= editable %>,
      selectable: true,
      useContextMenu: false,
      onCreateLi: function(node, $li) {
        // Add 'icon' span before title
        var icon="";
        if (node.icon){
          icon = "<img src='/icons/"+node.icon+"' width='32px' height='32px'  />";
        }else{
          icon = "<img src='/icons/styles/standard/empty.png' width='32px' height='32px' />";
        }
        $li.find('.jqtree-title').before('<span class="icon">'+icon+'</span>');
        $li.find('.jqtree-title').after('<span class="itemtoolbar">   <a href="#" onclick="open_item_edit(this);return false;"class="edit settings-button" data-itemid="'+node.id+'"><img src="/icon-cog-small.png" /></a></span>');
      },
      onCanMoveTo: function(moved_node, target_node, position) {
        if (position == "inside" && target_node.type =="item") {
          return false;
        } else {
          return true;
        }
      }

    }); //tree


   $('#tag_tree').bind(
    'tree.select',
      function(event) {
        if (event.node) {
          // node was selected
          var node = event.node;
          if (node.type != "item"){
            $("#tag_info").empty()
            return false;
          }
          render_item_tree(node);

        }
        else {
          // event.node is null
          // a node was deselected
        }
      }//function(event)
  );  //select tree


  //item_toolbar_setup()
  //renders the item form elements in a new tree
  function render_item_tree(node){
    $('#item_tree_title').empty();
    $('#item_tree').tree('destroy')

    $('#item_tree_title').append("<span class='item_title'>"+ node['name']+"  ("+node['geo_type'] +")</span>");
    <% if editable == "true"  -%>
      $('#item_tree_title').append("<br /><a id='add_preset_element' href='#'>Add new element</a>&nbsp;&nbsp;");
      $('#item_tree_title').append("<a id='save_item_tree' href='#'>Save Changes</a>");

      $('#add_preset_element').click(function(e){
        $("#add_preset_element_dialog").dialog( "open" );
        e.preventDefault();
      });

      $('#save_item_tree').click(function(e){
        $('#item_tree').tree('selectNode', null);
        var data = $('#item_tree').tree('toJson');
        var json_data = JSON.parse(data)

        $('#tag_tree').tree('updateNode', node,
          {
            item: json_data
          }
        );
        var data = null;
        var json_data = null;
        return false;
      });

    <% end -%>
    
    var item_elements =  node["item"]

    $('#item_tree').tree({
      data: item_elements,
      autoOpen: 0,
      dragAndDrop: <%= editable %>,
      selectable: <%= editable %>,
      useContextMenu: false,
      onCanSelectNode: function(node) {
        if (node.name == "optional") {
          return false;
        }
        else {
          return true;
        }
      },
      onCreateLi: function(node, $li) {
        $li.find('.jqtree-title').after(render_ele(node));
      },
      onCanMoveTo: function(moved_node, target_node, position) {
        if (position == "inside" && target_node.name !="optional") {
          return false;
        } else {
          return true;
        }
      }


    }); //tree
   var main_tree_height = $("div#tree_container").height()
   var item_tree_height = $("div#item_tree_container").height();
   if (item_tree_height >  main_tree_height ){
     $("div#tree_container").height(item_tree_height)
   }
   

  }

  //render item tree
  //TODO defaults
  //TODO display_values
  //TODO role
  function render_ele(ele){
    var html = "";
    var ele_html = "";

    var value = typeof ele.value !== 'undefined' ? ele.value : "";
    var text = typeof ele.text !== 'undefined' ? ele.text : "";
    if (ele.name == "link"){
      ele_html = "<span class='full link'>"+ ele.link + "</span>"
    }
    if (ele.name == "label") {
      ele_html = "<span class='full'>"+text+"</span>";
    }
    if (ele.name == "space"){
      ele_html = "<span class='full'>&nbsp</span>";
    }
    if (ele.name == "key"){
      ele_html = "<span class='left'>"+ele.key + "</span><span class='right'>"+value+"</span>";
    }
    if (ele.name == "text"){
      ele_html = "<span class='left' title='"+text+"'>"+ele.key+"</span><span class='right'><input type='text' /></span>" ;
    }
    if (ele.name == "combo" || ele.name=="multiselect"){
      var multiple = "";
      var delimiter = ",";
      if (ele.name == "multiselect"){
        multiple = " multiple "
        delimiter = ";"
      };
      ele_html = "<span class='left' title='"+text+"'>"+ele.key+"</span>" ;
      ele_html += "<span class='right'><select"+multiple+">";
      if (ele.values){
        $.each(ele.values.split(delimiter), function(index, option){
          ele_html +=  "<option value='"+ option +"'>"+ option +"</option>";
        });
      }
      ele_html += "</select></span>";
    }
    if (ele.name == "check"){
      ele_html = "<span class='full' title='"+text+"'><input type='checkbox' ";
      if (ele.default_value == "on"){
        ele_html += "checked";
      }
      ele_html += " >" + ele.key +"</span>";
    }

    html += ele_html;

    return html;
  }

  $('#add_item').click(function(e){
    $( "#add_item_dialog" ).dialog( "open" );
    e.preventDefault();
  });


}); //jq function

function open_item_edit(button){
  var itemid = button.getAttribute("data-itemid")
  var item = $('#tag_tree').tree('getNodeById', itemid);

  var geo_type = item.geo_type;
  var icon = item.icon;
  if (icon){
    icon = icon.substring(8);
  }else{
    icon = "empty.png"
  }
  var name = item.name;
  var type = item.type;
  var item_id = item.id;
  $('form#add_item_form input#item_id').val(item_id)
  $('form#add_item_form select#item_type').val(type)
  $('form#add_item_form input#name').val(name)
  $('form#add_item_form select#icon_select').select2("val", icon)
  if (type == "item"){
    $('form#add_item_form select#geo_type').val(geo_type.split(","))
  }

  $("#add_item_dialog").dialog( "option", "title", "Edit Item" );
  $("#add_item_dialog").dialog('open')

  return false;
}

</script>
